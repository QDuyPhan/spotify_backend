CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(150) UNIQUE NOT NULL,
    email VARCHAR(254) UNIQUE NOT NULL,
    password VARCHAR(128) NOT NULL,
    first_name VARCHAR(150),
    last_name VARCHAR(150),
    date_joined TIMESTAMP NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    profile_picture VARCHAR(255),
    bio TEXT
);

CREATE TABLE artists (
    id SERIAL PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    bio TEXT,
    profile_picture VARCHAR(255),
    verified BOOLEAN DEFAULT FALSE,
    monthly_listeners INTEGER DEFAULT 0,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE albums (
    id SERIAL PRIMARY KEY,
    title VARCHAR(150) NOT NULL,
    artist_id INTEGER REFERENCES artists(id),
    release_date DATE,
    cover_image VARCHAR(255),
    genre VARCHAR(50),
    description TEXT
);

CREATE TABLE songs (
    id SERIAL PRIMARY KEY,
    title VARCHAR(150) NOT NULL,
    artist_id INTEGER REFERENCES artists(id),
    album_id INTEGER REFERENCES albums(id),
    duration INTEGER NOT NULL,
    audio_file VARCHAR(255) NOT NULL,
    cover_image VARCHAR(255),
    release_date DATE,
    genre VARCHAR(50),
    play_count INTEGER DEFAULT 0
);

CREATE TABLE playlists (
    id SERIAL PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    user_id INTEGER REFERENCES users(id),
    description TEXT,
    cover_image VARCHAR(255),
    is_public BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL
);

CREATE TABLE playlist_songs (
    id SERIAL PRIMARY KEY,
    playlist_id INTEGER REFERENCES playlists(id),
    song_id INTEGER REFERENCES songs(id),
    added_at TIMESTAMP NOT NULL,
    position INTEGER NOT NULL
);

CREATE TABLE user_following (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    artist_id INTEGER REFERENCES artists(id),
    followed_at TIMESTAMP NOT NULL,
    UNIQUE(user_id, artist_id)
);

CREATE TABLE user_liked_songs (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    song_id INTEGER REFERENCES songs(id),
    liked_at TIMESTAMP NOT NULL,
    UNIQUE(user_id, song_id)
);
