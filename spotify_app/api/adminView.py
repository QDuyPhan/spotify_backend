# adminView.py
import os
from dotenv import load_dotenv
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from spotify_app.auth.authentication import ClerkJWTAuthentication

# Load bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()

# adminView.py
import os
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from spotify_app.auth.authentication import ClerkJWTAuthentication

class AdminCheckView(APIView):
    authentication_classes = [ClerkJWTAuthentication]
    permission_classes = [IsAuthenticated]

    def get(self, request):
        # Ki·ªÉm tra email t·ª´ user object
        user_email = getattr(request.user, "email", None)
        if not user_email:
            return Response({"error": "Email not found in user object"}, status=400)
        
        print(f"üßæ User email from request: {user_email}")

        # Ki·ªÉm tra quy·ªÅn admin
        admin_email = os.getenv("ADMIN_EMAIL", "minhthinh9229@gmail.com")
        is_admin = user_email == admin_email

        if not is_admin:
            print(f"‚õî Unauthorized access attempt by: {user_email}")
            return Response({"message": "Unauthorized - admin privileges required"}, status=403)

        print(f"‚úÖ Admin access granted to: {user_email}")
        return Response({
            "email": user_email,
            "admin": is_admin,
        })